typescript\nimport { Controller, Post, Body, Headers, UsePipes, ConflictException } from '@nestjs/common';\nimport { SubmissionService } from './submission.service';\nimport { CreateSubmissionDto } from './dto/submission.dto';\nimport { ValidationPipe } from '@nestjs/common';\n\n@Controller()\nexport class SubmissionController {\n  constructor(private readonly submissionService: SubmissionService) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true, whitelist: true })) \n  async create(\n    @Body() createSubmissionDto: CreateSubmissionDto,\n    // استخلاص مفتاح Idempotency من رأس الطلب [5]\n    @Headers('idempotency-key') idempotencyKey: string, \n  ) {\n    if (!idempotencyKey) {\n      // إجبار العميل على إرسال المفتاح لتطبيق Idempotency\n      throw new ConflictException('يجب توفير مفتاح Idempotency-Key في رأس الطلب.');\n    }\n    \n    return this.submissionService.create(idempotencyKey, createSubmissionDto);\n  }\n}\n
